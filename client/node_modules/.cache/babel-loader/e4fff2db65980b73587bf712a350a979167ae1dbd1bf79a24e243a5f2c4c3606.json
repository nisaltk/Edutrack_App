{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Handle response errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData)\n};\n\n// Teachers API\nexport const teachersAPI = {\n  getAll: () => api.get('/teachers'),\n  getById: id => api.get(`/teachers/${id}`),\n  create: teacherData => api.post('/teachers', teacherData),\n  update: (id, teacherData) => api.put(`/teachers/${id}`, teacherData),\n  delete: id => api.delete(`/teachers/${id}`)\n};\n\n// Upload API\nexport const uploadAPI = {\n  uploadImage: formData => api.post('/upload/image', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n};\n\n// AI Assistant API\nexport const aiAPI = {\n  chat: message => api.post('/ai/chat', {\n    message\n  }),\n  getHistory: () => api.get('/ai/history')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","register","userData","teachersAPI","getAll","get","getById","id","teacherData","update","put","delete","uploadAPI","uploadImage","formData","aiAPI","chat","message","getHistory"],"sources":["C:/Users/Nisal/Downloads/web/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: { 'Content-Type': 'application/json' },\n});\n\n// Add token to requests\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Handle response errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: (credentials) => api.post('/auth/login', credentials),\n  register: (userData) => api.post('/auth/register', userData),\n};\n\n// Teachers API\nexport const teachersAPI = {\n  getAll: () => api.get('/teachers'),\n  getById: (id) => api.get(`/teachers/${id}`),\n  create: (teacherData) => api.post('/teachers', teacherData),\n  update: (id, teacherData) => api.put(`/teachers/${id}`, teacherData),\n  delete: (id) => api.delete(`/teachers/${id}`),\n};\n\n// Upload API\nexport const uploadAPI = {\n  uploadImage: (formData) =>\n    api.post('/upload/image', formData, { headers: { 'Content-Type': 'multipart/form-data' } }),\n};\n\n// AI Assistant API\nexport const aiAPI = {\n  chat: (message) => api.post('/ai/chat', { message }),\n  getHistory: () => api.get('/ai/history'),\n};\n\nexport default api;\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IAAE,cAAc,EAAE;EAAmB;AAChD,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACAZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMU,OAAO,GAAG;EACrBC,KAAK,EAAGC,WAAW,IAAKxB,GAAG,CAACyB,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;EAC5DE,QAAQ,EAAGC,QAAQ,IAAK3B,GAAG,CAACyB,IAAI,CAAC,gBAAgB,EAAEE,QAAQ;AAC7D,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAG;EACzBC,MAAM,EAAEA,CAAA,KAAM7B,GAAG,CAAC8B,GAAG,CAAC,WAAW,CAAC;EAClCC,OAAO,EAAGC,EAAE,IAAKhC,GAAG,CAAC8B,GAAG,CAAC,aAAaE,EAAE,EAAE,CAAC;EAC3C/B,MAAM,EAAGgC,WAAW,IAAKjC,GAAG,CAACyB,IAAI,CAAC,WAAW,EAAEQ,WAAW,CAAC;EAC3DC,MAAM,EAAEA,CAACF,EAAE,EAAEC,WAAW,KAAKjC,GAAG,CAACmC,GAAG,CAAC,aAAaH,EAAE,EAAE,EAAEC,WAAW,CAAC;EACpEG,MAAM,EAAGJ,EAAE,IAAKhC,GAAG,CAACoC,MAAM,CAAC,aAAaJ,EAAE,EAAE;AAC9C,CAAC;;AAED;AACA,OAAO,MAAMK,SAAS,GAAG;EACvBC,WAAW,EAAGC,QAAQ,IACpBvC,GAAG,CAACyB,IAAI,CAAC,eAAe,EAAEc,QAAQ,EAAE;IAAEpC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAsB;EAAE,CAAC;AAC9F,CAAC;;AAED;AACA,OAAO,MAAMqC,KAAK,GAAG;EACnBC,IAAI,EAAGC,OAAO,IAAK1C,GAAG,CAACyB,IAAI,CAAC,UAAU,EAAE;IAAEiB;EAAQ,CAAC,CAAC;EACpDC,UAAU,EAAEA,CAAA,KAAM3C,GAAG,CAAC8B,GAAG,CAAC,aAAa;AACzC,CAAC;AAED,eAAe9B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}